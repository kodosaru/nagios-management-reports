#!/bin/bash
# 20150213 djohnson
#set -x

# Set this start date if debugging reports
date="05/21/2015"

# Force deliverly if want to send report out to actual users in debugging mode
# Report not normally sent to actual users in debugging mode
#FORCE_DELIVER=true
FORCE_DELIVER=false

# Set debugging to true if want diagnostics sent to stdout
DEBUG=true
#DEBUG=false

# Set if you want to send mail
#MAIL=false
MAIL=true

# Choose if you want to send mail
if [ $MAIL == "true" ]; then
	mutt_path='/usr/bin/mutt -F /usr/local/nagios-management-reports/muttrc'
else
	mutt_path='/bin/true'
fi

# Generate all three reports: Unix, Windows and Other 
if [ $DEBUG == "true" ]; then
	echo "Report beginning date:" $date
	os_list="unix"
	#os_list="unix windows dba other"
else
	os_list="unix windows dba other"
fi

for os in $os_list 
do
	if [ $DEBUG == "true" ]; then
		# For testing
		echo "Date: "$date "for OS: "$os
		ruby -rdebug ./alerts-report-new.rb $date false true false $os db
	else
		# Is a cronjob
		date=`/bin/date +"%m/%d/%Y"`
		./alerts-report-new.rb $date true false true $os db
	fi
	strtmp=$os"*"
	temp=`/bin/ls -ltr $strtmp 2>&1`
	if [ -n "`echo $temp | grep 'No such file'`" ]
	then
		echo "No $os report was generated by the \"alerts-report-new.rb\" script"
		exit 1 
	fi
done
echo
exit 0

unix_filename=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^unix_alerts_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
unix_filename_with_recovery=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^unix_alerts_with_recovery_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
windows_filename=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^windows_alerts_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
windows_filename_with_recovery=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^windows_alerts_with_recovery_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
dba_filename=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^dba_alerts_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
dba_filename_with_recovery=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^dba_alerts_with_recovery_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
other_filename=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^other_alerts_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`
other_filename_with_recovery=`/bin/ls -ltr | /bin/awk '{print $9}' | /bin/egrep '^other_alerts_with_recovery_[0-9]{2}-[0-9]{2}_to_[0-9]{2}-[0-9]{2}.xls'`

if [ $DEBUG == "true" ]; then
	echo "Report file names: "
	if [ -n "$unix_filename" ]
	then
		echo Standard Unix report created: $unix_filename 
	else
		echo No standard Unix report created
	fi
	if [ -n "$unix_filename_with_recovery" ]
	then
		echo Unix with recovery report created: $unix_filename_with_recovery
	else
		echo No Unix with recovery report created
	fi
	if [ -n "$windows_filename" ]
	then
		echo Standard Windows report created: $windows_filename
	else
		echo No standard Windows report created
	fi
	if [ -n "$windows_filename_with_recovery" ]
	then
		echo Windows with recovery report created: $windows_filename_with_recovery
	else
		echo No Windows with recovery report created
	fi
	if [ -n "$dba_filename" ]
	then
		echo Standard DBA report created: $dba_filename
	else
		echo No standard DBA report created
	fi
	if [ -n "$dba_filename_with_recovery" ]
	then
		echo DBA with recovery report created: $dba_filename_with_recovery
	else
		echo No DBA with recovery report created
	fi
	if [ -n "$other_filename" ]
	then
		echo Standard Other report created: $other_filename
	else
		echo No standard Other report created
	fi
	if [ -n "$other_filename_with_recovery" ]
	then
		echo Other with recovery report created: $other_filename_with_recovery
	else
		echo No Other with recovery report created
	fi
fi

# Define mailing lists
if [ $DEBUG == "true" ] && [ $FORCE_DELIVER == "false" ]; then
	LINUX_TEAM_LIST=test.list
	WINDOWS_TEAM_LIST=test.list
	DBA_TEAM_LIST=test.list
	OTHER_TEAM_LIST=test.list
	MANAGERS_LIST=test.list
else
	LINUX_TEAM_LIST=linux_team.list
	WINDOWS_TEAM_LIST=windows_team.list
	DBA_TEAM_LIST=dba_team.list
	OTHER_TEAM_LIST=other_team.list
	MANAGERS_LIST=managers.list
fi

BODY=managers_body.txt
MANAGER_MAIL_CMD="cat $BODY | $mutt_path -s \"Manager Duty Pager Alerts Reports\""
MMC_LEN=${#MANAGER_MAIL_CMD}
if [ -n "$unix_filename" ]
then
	MANAGER_MAIL_CMD+=" -a "$unix_filename
fi
if [ -n "$unix_filename_with_recovery" ]
then
	MANAGER_MAIL_CMD+=" -a "$unix_filename_with_recovery
fi
if [ -n "$windows_filename" ]
then
	MANAGER_MAIL_CMD+=" -a "$windows_filename
fi
if [ -n "$windows_filename_with_recovery" ]
then
	MANAGER_MAIL_CMD+=" -a "$windows_filename_with_recovery
fi
if [ -n "$dba_filename" ]
then
	MANAGER_MAIL_CMD+=" -a "$dba_filename
fi
if [ -n "$dba_filename_with_recovery" ]
then
	MANAGER_MAIL_CMD+=" -a "$dba_filename_with_recovery
fi
if [ -n "$other_filename" ]
then
	MANAGER_MAIL_CMD+=" -a "$other_filename
fi
if [ -n "$other_filename_with_recovery" ]
then
	MANAGER_MAIL_CMD+=" -a "$other_filename_with_recovery
fi
MMC_LEN=${#MANAGER_MAIL_CMD}

# Generate the Linux team report
if [ -n "$unix_filename_with_recovery" ]
then
	if [ $DEBUG == "true" ]
	then
		printf "\nSending Linux report\n"
	fi
	BODY=linux_team_body.txt
	while read recipient 
	do
		if [ -z "`echo $recipient | egrep '^.*#'`" ]; then
			if [ $DEBUG == "true" ]; then
				echo cat $BODY \| $mutt_path -s "Unix Duty Pager Alerts Report" -a $unix_filename_with_recovery -- $recipient
			fi
			cat $BODY | $mutt_path -s "Unix Duty Pager Alerts Report" -a $unix_filename_with_recovery -- $recipient
		fi
	done < $LINUX_TEAM_LIST
else
			echo 'echo "No alert records found this week." | $mutt_path -s "Unix Duty Pager Alerts Report" -a $unix_filename_with_recovery -- $recipient'
			echo "No alert records found this week." | $mutt_path -s "Unix Duty Pager Alerts Report" -a $unix_filename_with_recovery -- $recipient
fi

# Generate the Windows team report
if [ -n "$windows_filename_with_recovery" ]
then
	if [ $DEBUG == "true" ]
	then
		printf "\nSending Windows's report\n"
	fi
	BODY=windows_team_body.txt
	while read recipient 
	do
		if [ -z "`echo $recipient | egrep '^.*#'`" ]; then
			if [ $DEBUG == "true" ]; then
				echo cat $BODY \| $mutt_path -s "Windows Duty Pager Alerts Report" -a $windows_filename_with_recovery -- $recipient 
			fi
			cat $BODY | $mutt_path -s "Windows Duty Pager Alerts Report" -a $windows_filename_with_recovery -- $recipient 
		fi
	done < $WINDOWS_TEAM_LIST
else
			echo 'echo "No alert records found this week." | $mutt_path -s "Windows Duty Pager Alerts Report" -a $windows_filename_with_recovery -- $recipient'
			echo "No alert records found this week." | $mutt_path -s "Windows Duty Pager Alerts Report" -a $windows_filename_with_recovery -- $recipient 
fi

# Generate the DBA report
if [ -n "$dba_filename_with_recovery" ]
then
	if [ $DEBUG == "true" ]
	then
		printf "\nSending DBAs' report\n"
	fi
	BODY=dba_team_body.txt
	while read recipient 
	do
		if [ -z "`echo $recipient | egrep '^.*#'`" ]; then
			if [ $DEBUG == "true" ]; then
				echo cat $BODY \| $mutt_path -s "DBA Duty Pager Alerts Report" -a $dba_filename_with_recovery -- $recipient 
			fi
			cat $BODY | $mutt_path -s "DBA Duty Pager Alerts Report" -a $dba_filename_with_recovery -- $recipient 
		fi
	done < $DBA_TEAM_LIST
else
		echo 'echo "No alert records found this week."  | $mutt_path -s "DBA Duty Pager Alerts Report" -a $dba_filename_with_recovery $recipient'
		echo "No alert records found this week."  | $mutt_path -s "DBA Duty Pager Alerts Report" -a $dba_filename_with_recovery -- $recipient 
fi

# Generate the other report
if [ -n "$other_filename_with_recovery" ]
then
	if [ $DEBUG == "true" ]
	then
		printf "\nSending Other's report\n"
	fi
	BODY=other_team_body.txt
	while read recipient 
	do
		if [ -z "`echo $recipient | egrep '^.*#'`" ]; then
			if [ $DEBUG == "true" ]; then
				echo cat $BODY \| $mutt_path -s "Other Duty Pager Alerts Report" -a $other_filename_with_recovery -- $recipient 
			fi
			cat $BODY | $mutt_path -s "Other Duty Pager Alerts Report" -a $other_filename_with_recovery -- $recipient 
		fi
	done < $OTHER_TEAM_LIST
else
		echo 'echo "No alert records found this week." | $mutt_path -s "Other Duty Pager Alerts Report" -a $other_filename_with_recovery -- $recipient' 
		echo "No alert records found this week." | $mutt_path -s "Other Duty Pager Alerts Report" -a $other_filename_with_recovery -- $recipient 
fi

# Generate the managers report
if [ -n "$unix_filename_with_recovery" ] && [ -n "$windows_filename_with_recovery" ] \
   	&& [ -n "$dba_filename_with_recovery" ] && [ -n "$other_filename_with_recovery" ] 
then
	if [ $DEBUG == "true" ]
	then
		printf "\nSending Managers' report\n"
	fi
	while read recipient 
	do
		if [ -z "`echo $recipient | egrep '^.*#'`" ]; then
			if [ $DEBUG == "true" ]; then
				echo $MANAGER_MAIL_CMD" -- "$recipient 
			fi
			eval $MANAGER_MAIL_CMD" -- "$recipient 
		fi
	done < $MANAGERS_LIST
else
	echo 'echo "No alert records found this week." | $mutt_path -s "Manager Duty Pager Alerts Reports" -- $recipient'
	echo "No alert records found this week." | $mutt_path -s "Manager Duty Pager Alerts Reports" -- $recipient
fi

# Archive the reports
if [ $DEBUG == "false" ] || [ $FORCE_DELIVER == "true" ]; then
	mv *.xls ./reports/
fi
